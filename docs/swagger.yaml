definitions:
  domain.CreateUserRequest:
    properties:
      password:
        example: "1234"
        type: string
      userName:
        example: classting_admin
        type: string
      userType:
        allOf:
        - $ref: '#/definitions/domain.UserType'
        example: ADMIN
    required:
    - password
    - userName
    - userType
    type: object
  domain.LoginUserRequest:
    properties:
      password:
        example: "1234"
        type: string
      userName:
        example: classting_admin
        type: string
    required:
    - password
    - userName
    type: object
  domain.LoginUserResponse:
    properties:
      accessToken:
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3MDg4ODgxOTIsInVzZXJJRCI6MX0.WVQGpeNbCpWSKuvYO7rFv6HoXaEA4_VQZSl7oMhmROk
        type: string
      expiresIn:
        example: 1708888192
        type: integer
    required:
    - accessToken
    - expiresIn
    type: object
  domain.UserType:
    enum:
    - ADMIN
    - STUDENT
    type: string
    x-enum-varnames:
    - UserUseTypeAdmin
    - UserUseTypeStudent
info:
  contact: {}
paths:
  /users:
    post:
      consumes:
      - application/json
      description: 관리자, 학생의 역할로 회원가입 요청 (관리자의 경우 UserType = ADMIN, 학생의 경우 UserType
        = STUDENT)
      parameters:
      - description: 회원가입 요청
        in: body
        name: CreateUserRequest
        required: true
        schema:
          $ref: '#/definitions/domain.CreateUserRequest'
      produces:
      - application/json
      responses:
        "204":
          description: No Content
      summary: 회원가입
      tags:
      - User
  /users/login:
    post:
      consumes:
      - application/json
      description: '예시 유저네임: classting_admin, 비밀번호: classting, UserType = ADMIN /
        classting_student, 비밀번호: classting, UserType = STUDENT'
      parameters:
      - description: 로그인 요청
        in: body
        name: LoginUserRequest
        required: true
        schema:
          $ref: '#/definitions/domain.LoginUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.LoginUserResponse'
      summary: 로그인
      tags:
      - User
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
